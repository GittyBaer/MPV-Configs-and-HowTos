====Profiles====
Built-in high quality profile. Enables better upscaling algorithm. Recommend GPU minimum of newer Intel Iris iGPU, AMD VEGA 8 iGPU, or NVidia MX150. Add this option at the beginning of the file to prevent overriding options!
profile=gpu-hq

Übrigens kann man sich mit "mpv --show-profile=gpu-hq" anzeigen lassen, was das Profil "gpu-hq" eigentlich enthält.
Das sind folgende Optionen:

    Profile gpu-hq:

    scale=spline36
    cscale=spline36
    dscale=mitchell
    dither-depth=auto
    correct-downscaling=yes
    linear-downscaling=yes
    sigmoid-upscaling=yes
    deband=yes




====Debanding=====
# Test Scene aus Game of Thrones - Welche?
deband=yes # Default values are 1:64:16:48
deband-iterations=2 # Range 1-16. Higher = better quality but more GPU usage. >5 is redundant.
#**The number of debanding steps to perform per sample. Each step reduces a bit more banding, but takes time to compute. Note that the strength of each step falls off very quickly, so high numbers (>4) are practically useless. (Default 1)

deband-threshold=35 # Range 0-4096. Deband strength.
 #**The debanding filter's cut-off threshold. Higher numbers increase the debanding strength dramatically but progressively diminish image details. (Default 64)

deband-range=20 # Range 1-64. Range of deband. Too high may destroy details.
#**The debanding filter's initial radius. The radius increases linearly for each iteration. A higher radius will find more gradients, but a lower radius will smooth more aggressively. (Default 16) If you increase the deband-iterations, you should probably decrease this to compensate.

deband-grain=5 # Range 0-4096. Inject grain to cover up bad banding, higher value needed for poor sources.
#**Add some extra noise to the image. This significantly helps cover up remaining quantization artifacts. Higher numbers add more noise. (Default 48). set to "0" if using the static grain shader.



## Note: For older/weaker iGPUs, instead of increasing deband-iterations you may need to increase deband-threshold instead if you need a stronger effect. I recommend 1:60:25:30 if you absolutely must run 1 iteration (lower quality but much less GPU usage).



# ===== Color Space =====
target-trc=auto
gamma-auto
vf=format=colorlevels=full:colormatrix=auto
video-output-levels=full


====Dithering=====

dither-depth=auto ????
--dither-depth=<N|no|auto>
    Set dither target depth to N. Default: no.

no    Disable any dithering done by mpv.
auto  Automatic selection. If output bit depth cannot be detected, 8 bits per component are assumed.
8     Dither to 8 bit output.

Note that the depth of the connected video display device cannot be detected. Often, LCD panels will do dithering on their own, which conflicts with this option and leads to ugly output.

--dither-size-fruit=<2-8>
    Set the size of the dither matrix (default: 6). The actual size of the matrix is (2^N) x (2^N) for an option value of N, so a value of 6 gives a size of 64x64. The matrix is generated at startup time, and a large matrix can take rather long to compute (seconds).
    Used in --dither=fruit mode only.
	
--dither=<fruit|ordered|error-diffusion|no>
    Select dithering algorithm (default: fruit). (Normally, the --dither-depth option controls whether dithering is enabled.)

    The error-diffusion option requires compute shader support. It also requires large amount of shared memory to run, the size of which depends on both the kernel (see --error-diffusion option below) and the height of video window. It will fallback to fruit dithering if there is no enough shared memory to run the shader.

--temporal-dither
    Enable temporal dithering. (Only active if dithering is enabled in general.) This changes between 8 different dithering patterns on each frame by changing the orientation of the tiled dithering matrix. Unfortunately, this can lead to flicker on LCD displays, since these have a high reaction time.
--temporal-dither-period=<1-128>
    Determines how often the dithering pattern is updated when --temporal-dither is in use. 1 (the default) will update on every video frame, 2 on every other frame, etc.
--error-diffusion=<kernel>
    The error diffusion kernel to use when --dither=error-diffusion is set.

simple
    Propagate error to only two adjacent pixels. Fastest but low quality.
sierra-lite
    Fast with reasonable quality. This is the default.
floyd-steinberg
    Most notable error diffusion kernel.
atkinson
    Looks different from other kernels because only fraction of errors will be propagated during dithering. A typical use case of this kernel is saving dithered screenshot (in window mode). This kernel produces slightly smaller file, with still reasonable dithering quality.

There are other kernels (use --error-diffusion=help to list) but most of them are much slower and demanding even larger amount of shared memory. Among these kernels, burkes achieves a good balance between performance and quality, and probably is the one you want to try first.

Example:
# ===== Dithering =====
dither-depth=auto
temporal-dither=yes
dither=fruit




====Scaling====
Welche machen sinn?
FullHD -> 4K

SD -> 4K

Example:
# ===== Upscaling & Processing =====
glsl-shaders-clr
# luma upscaling
# note: any FSRCNNX above FSRCNNX_x2_8-0-4-1 is not worth the additional computional overhead
glsl-shaders="~/AppData\Roaming\mpv\shaders\FSRCNNX_x2_8-0-4-1.glsl"
scale=ewa_lanczos
# luma downscaling
# note: ssimdownscaler is tuned for mitchell and downscaling=no
glsl-shaders-append="~/AppData\Roaming\mpv\shaders\SSimDownscaler.glsl"
dscale=mitchell
linear-downscaling=no
# chroma upscaling and downscaling
glsl-shaders-append="~/AppData\Roaming\mpv\shaders\KrigBilateral.glsl"
cscale=mitchell
sigmoid-upscaling=yes

einzelne Optionen bei HKV suchen, was sagen die anderen?







# ===== Anti-Ringing =====
scale-antiring=0.7 # luma upscale deringing
dscale-antiring=0.7 # luma downscale deringing
cscale-antiring=0.7 # chroma upscale deringing
# -> Welche Parameter sinnvoll

====Bar detection====
-> move video to bottom for mask

Dynamic-Crop Script
https://github.com/Ashyni/mpv-scripts
Das Script is besonders gut geeignet mit einer Custom Auflösung (z.B. 3840x1600 oder ähnliches) und erspaart das Benutzen des Lensmemories (auf Kosten der Auflösung und Helligkeit) für 16:9 und alle anderen Zwischenformate.
Besonders praktisch und bequem, wenn man einen Panamorph besitzt. Dadurch passen sich praktisch alle Formate in die Leinwand ein.
Auch geeignet, um einfach nur die schwarzen Balken weg zu schneiden. Um das beschnittene Bild automatisch an die Unterkante zu schieben, auch wenn es mitten im Film wechselt, nach der Zeile (aktuell Zeile 374 (nano -c zeigt Zeilennummern an)).
 mp.command(string.format("no-osd vf append @%s:lavfi-crop=%s", labels.crop, current.whxy))
noch die Zeile
 mp.command(string.format("no-osd set video-align-y 1"))
einfügen und die Option video-align-y=1 aus der mpv.conf entfernen, sollte diese gesetzt gewesen sein.

Da nun bei Filmen ohne schwarze Balken das Script nicht cropt, wird auch das Bild nicht nach unten geschoben. Also muss die Zeile noch ein mal ans Ende der Funktion on_start eingefügt werden, also eingefügt vor der Zeile "end", als Zeile 555.




====Bildfrequenz Anpassung====
Automatische Umschaltung auf dem Video-fps am nächsten kommende Bildwiederholfrequenz unter Beibehaltung der aktuellen Auflösung:
Für Linux: https://github.com/kevinlekill…pts/tree/master/autospeed
Für Windows: https://github.com/kevinlekill…/tree/master/autospeedwin
UNGETESTET




====Audio Config====
alang = 'ger,de,eng,en'




====Subtitle Config====
#Das Meiste selbsterklärend

slang = 'de,ger,eng,en,enUS' # enUS for Crunchyroll.
sid=no # Untertitel beim Start deaktivieren
sub-font-size=32
image-subs-video-resolution=yes
sub-bold=yes
sub-border-size=2
sub-color=0.70/0.70 # Subs 70% grau with 70% Alpha
sub-auto=fuzzy # externe Subs suchen und finden

blend-subtitles=yes # Entscheidet ob subtitles von icc profilen und so weiter beeinflußt werden und ob sie mit dem vieo skaliert werden 
#....ev. nur für DVD content interessant?

====Allgemeines====
save-position-on-quit=yes

# Enables best HW decoder; turn off for software decoding
hwdec=auto

border=no # hides the window title bar
msg-color=yes # color log messages on terminal
term-osd-bar=yes # display a progress bar on the terminal
cursor-autohide=1000 # autohide the curser after 1s

# Uses a large seekable RAM cache even for local input.
cache=yes
# cache-secs=300
# Uses extra large RAM cache (needs cache=yes to make it useful).
demuxer-max-bytes=1800M
demuxer-max-back-bytes=1200M

====Alternative Oberfläche====
Grundlage für die Oberfläche zum Basteln (mit osc=no in mpv.conf):
https://github.com/mpv-player/…master/player/lua/osc.lua
osc=no # Disables default OSD. Use this option ONLY if you have a custom osc.lua



====OSD====
# OSD-Bar aufhübschen und nach unten schieben
osd-duration=3000
osd-bar-align-y=0.99
osd-bar-w=99
osd-border-size=2
osd-bar-h=2
osd-font-size=25
osd-color=0.7/0.4 # Subs 70% grau with 40% Alpha


# ===== Motion Interpolation / a la madvr Smooth Motion =====
override-display-fps=60
video-sync=display-resample
interpolation=yes
tscale=oversample # smoothmotion


==== 3DLut / Color ====
Was ist hier zu tun?

#Only one of these Options:
#target-prim=bt.2020
#icc-profile="C:\Windows\System32\spool\drivers\color\Example.icc" # Use defined icc file
#icc-profile-auto # Use this if your system has a default icc profile setup already.
target-prim=dci-p3 # Use this if you don't have a calibrated icc profile, but know your monitor's gamut

Afaik wird icc Profil nur als 1D LUT verwendet



====LUA Scripte====


Parameter an Script übergeben (Bsp. mdann dynamic_crop script)

    script-opts-append=dynamic_crop-<optionsname>=<wert>

Beispiel:

    script-opts-append=dynamic_crop-zoom16_9=yes
    script-opts-append=dynamic_crop-scope_ratio=2.4








==== Weiteres====

Shader Benchmarks:
https://artoriuz.github.io/blog/mpv_upscaling.html

Statistiken aufrufen:
Außerdem drück mal Shift + I und dann 2, dann kannst du sehen welche Optionen wieviel Zeit verbrauchen.

Custom Resolution Utility Windows: https://custom-resolution-utility.en.lo4d.com/windows


Hardware decoding is not enabled by default, because it is typically an additional source of errors. It is worth using only if your CPU is too slow to decode a specific video.



Einträge der mpv.conf auf Hotkeys legen
input.conf:
Boolschen Parameter per Taste setzen:
p set pause yes

Profil per Taste aktivieren (muss mit profile-desc="..." benannt sein):
m apply-profile "test"

Parameter per Taste inkrementieren/dekrementieren (geht auch mit "multiply" statt "add"):
+ add target-peak 10
- add target-peak -10



=====Debugging=====
./mpv.com --msg-level=all=v "Datei.mkv"


Infos einblenden über aktuelle Verarbeitung
Shift + I
Wird noch die “2” gedrückt kommen Renderzeiten in die Anzeige